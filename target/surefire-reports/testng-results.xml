<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="15" passed="14" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-10-02T15:49:41Z" name="BankScenarios" finished-at="2023-10-02T15:50:17Z" duration-ms="35995">
    <groups>
    </groups>
    <test started-at="2023-10-02T15:49:41Z" name="HomePage" finished-at="2023-10-02T15:50:17Z" duration-ms="35995">
      <class name="tests.BankScenarios">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:tests.BankScenarios@158a8276]" started-at="2023-10-02T15:49:41Z" name="beforeClass" finished-at="2023-10-02T15:49:43Z" duration-ms="2142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="before()[pri:0, instance:tests.BankScenarios@158a8276]" started-at="2023-10-02T15:49:43Z" name="before" finished-at="2023-10-02T15:49:44Z" duration-ms="1254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="addCustomer(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.BankScenarios@158a8276]" started-at="2023-10-02T15:49:44Z" name="addCustomer" data-provider="add-customer" finished-at="2023-10-02T15:49:47Z" duration-ms="2993" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Christopher]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Connely]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[L789C349]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCustomer -->
        <test-method is-config="true" signature="before()[pri:0, instance:tests.BankScenarios@158a8276]" started-at="2023-10-02T15:49:47Z" name="before" finished-at="2023-10-02T15:49:47Z" duration-ms="28" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="addCustomer(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.BankScenarios@158a8276]" started-at="2023-10-02T15:49:47Z" name="addCustomer" data-provider="add-customer" finished-at="2023-10-02T15:49:48Z" duration-ms="845" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Frank]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Christopher]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[A897N450]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCustomer -->
        <test-method is-config="true" signature="before()[pri:0, instance:tests.BankScenarios@158a8276]" started-at="2023-10-02T15:49:48Z" name="before" finished-at="2023-10-02T15:49:48Z" duration-ms="40" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="addCustomer(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.BankScenarios@158a8276]" started-at="2023-10-02T15:49:48Z" name="addCustomer" data-provider="add-customer" finished-at="2023-10-02T15:49:49Z" duration-ms="867" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Christopher]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Minka]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[M098Q585]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCustomer -->
        <test-method is-config="true" signature="before()[pri:0, instance:tests.BankScenarios@158a8276]" started-at="2023-10-02T15:49:49Z" name="before" finished-at="2023-10-02T15:49:49Z" duration-ms="33" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="addCustomer(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.BankScenarios@158a8276]" started-at="2023-10-02T15:49:49Z" name="addCustomer" data-provider="add-customer" finished-at="2023-10-02T15:49:50Z" duration-ms="900" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Connely]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Jackson]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[L789C349]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCustomer -->
        <test-method is-config="true" signature="before()[pri:0, instance:tests.BankScenarios@158a8276]" started-at="2023-10-02T15:49:50Z" name="before" finished-at="2023-10-02T15:49:50Z" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="addCustomer(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.BankScenarios@158a8276]" started-at="2023-10-02T15:49:50Z" name="addCustomer" data-provider="add-customer" finished-at="2023-10-02T15:49:51Z" duration-ms="863" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Jackson]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Frank]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[L789C349]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCustomer -->
        <test-method is-config="true" signature="before()[pri:0, instance:tests.BankScenarios@158a8276]" started-at="2023-10-02T15:49:51Z" name="before" finished-at="2023-10-02T15:49:51Z" duration-ms="34" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="addCustomer(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.BankScenarios@158a8276]" started-at="2023-10-02T15:49:51Z" name="addCustomer" data-provider="add-customer" finished-at="2023-10-02T15:49:52Z" duration-ms="911" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Minka]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Jackson]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[A897N450]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCustomer -->
        <test-method is-config="true" signature="before()[pri:0, instance:tests.BankScenarios@158a8276]" started-at="2023-10-02T15:49:52Z" name="before" finished-at="2023-10-02T15:49:52Z" duration-ms="35" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="addCustomer(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.BankScenarios@158a8276]" started-at="2023-10-02T15:49:52Z" name="addCustomer" data-provider="add-customer" finished-at="2023-10-02T15:49:58Z" duration-ms="6114" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Jackson]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Connely]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[L789C349]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCustomer -->
        <test-method is-config="true" signature="before()[pri:0, instance:tests.BankScenarios@158a8276]" started-at="2023-10-02T15:49:58Z" name="before" finished-at="2023-10-02T15:49:58Z" duration-ms="73" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="addUser()[pri:0, instance:tests.BankScenarios@158a8276]" started-at="2023-10-02T15:49:58Z" name="addUser" finished-at="2023-10-02T15:50:08Z" duration-ms="9906" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at tests.BankScenarios.addUser(BankScenarios.java:224)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addUser -->
        <test-method is-config="true" signature="before()[pri:0, instance:tests.BankScenarios@158a8276]" started-at="2023-10-02T15:50:08Z" name="before" finished-at="2023-10-02T15:50:08Z" duration-ms="766" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="performTransaction(java.lang.String, java.lang.String)[pri:0, instance:tests.BankScenarios@158a8276]" started-at="2023-10-02T15:50:08Z" name="performTransaction" data-provider="transaction" finished-at="2023-10-02T15:50:11Z" duration-ms="2092" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[50000]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Credit]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- performTransaction -->
        <test-method is-config="true" signature="before()[pri:0, instance:tests.BankScenarios@158a8276]" started-at="2023-10-02T15:50:11Z" name="before" finished-at="2023-10-02T15:50:11Z" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="performTransaction(java.lang.String, java.lang.String)[pri:0, instance:tests.BankScenarios@158a8276]" started-at="2023-10-02T15:50:11Z" name="performTransaction" data-provider="transaction" finished-at="2023-10-02T15:50:12Z" duration-ms="1258" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3000]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Debit]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- performTransaction -->
        <test-method is-config="true" signature="before()[pri:0, instance:tests.BankScenarios@158a8276]" started-at="2023-10-02T15:50:12Z" name="before" finished-at="2023-10-02T15:50:12Z" duration-ms="34" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="performTransaction(java.lang.String, java.lang.String)[pri:0, instance:tests.BankScenarios@158a8276]" started-at="2023-10-02T15:50:12Z" name="performTransaction" data-provider="transaction" finished-at="2023-10-02T15:50:13Z" duration-ms="895" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2000]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Debit]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- performTransaction -->
        <test-method is-config="true" signature="before()[pri:0, instance:tests.BankScenarios@158a8276]" started-at="2023-10-02T15:50:13Z" name="before" finished-at="2023-10-02T15:50:13Z" duration-ms="34" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="performTransaction(java.lang.String, java.lang.String)[pri:0, instance:tests.BankScenarios@158a8276]" started-at="2023-10-02T15:50:13Z" name="performTransaction" data-provider="transaction" finished-at="2023-10-02T15:50:14Z" duration-ms="913" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5000]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Credit]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- performTransaction -->
        <test-method is-config="true" signature="before()[pri:0, instance:tests.BankScenarios@158a8276]" started-at="2023-10-02T15:50:14Z" name="before" finished-at="2023-10-02T15:50:14Z" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="performTransaction(java.lang.String, java.lang.String)[pri:0, instance:tests.BankScenarios@158a8276]" started-at="2023-10-02T15:50:14Z" name="performTransaction" data-provider="transaction" finished-at="2023-10-02T15:50:15Z" duration-ms="840" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10000]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Debit]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- performTransaction -->
        <test-method is-config="true" signature="before()[pri:0, instance:tests.BankScenarios@158a8276]" started-at="2023-10-02T15:50:15Z" name="before" finished-at="2023-10-02T15:50:15Z" duration-ms="26" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="performTransaction(java.lang.String, java.lang.String)[pri:0, instance:tests.BankScenarios@158a8276]" started-at="2023-10-02T15:50:15Z" name="performTransaction" data-provider="transaction" finished-at="2023-10-02T15:50:15Z" duration-ms="884" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[15000]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Debit]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- performTransaction -->
        <test-method is-config="true" signature="before()[pri:0, instance:tests.BankScenarios@158a8276]" started-at="2023-10-02T15:50:15Z" name="before" finished-at="2023-10-02T15:50:16Z" duration-ms="25" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="performTransaction(java.lang.String, java.lang.String)[pri:0, instance:tests.BankScenarios@158a8276]" started-at="2023-10-02T15:50:16Z" name="performTransaction" data-provider="transaction" finished-at="2023-10-02T15:50:16Z" duration-ms="847" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1500]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Credit]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- performTransaction -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.BankScenarios@158a8276]" started-at="2023-10-02T15:50:16Z" name="tearDown" finished-at="2023-10-02T15:50:17Z" duration-ms="188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.BankScenarios -->
    </test> <!-- HomePage -->
  </suite> <!-- BankScenarios -->
</testng-results>
